/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

const Stars = props => {
  const { nodes, materials } = useGLTF('/Environment/Stars.glb');

  const starRef = useRef();

  useFrame(() => {
    if (starRef.current) {
      starRef.current.rotation.y += 0.005;
    }
  });

  return (
    <group {...props} dispose={null} ref={starRef} position={[0, 0, 0]}>
      <group position={[-10, 10, -40]}>
        <group name="RootNode" position={[0, 7.779, 0]} scale={3.318}>
          <mesh
            name="Star"
            geometry={nodes.Star.geometry}
            material={materials.Yellow}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
        </group>
        <group name="RootNode001" position={[-3.726, 4.925, 0]} scale={3.318}>
          <mesh
            name="Star001"
            geometry={nodes.Star001.geometry}
            material={materials.blue}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
        </group>
        <group name="RootNode002" position={[3.629, 4.091, 0]} scale={3.318}>
          <mesh
            name="Star002"
            geometry={nodes.Star002.geometry}
            material={materials.red}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
        </group>
      </group>
    </group>
  );
};

useGLTF.preload('/Environment/Stars.glb');

export default Stars;
